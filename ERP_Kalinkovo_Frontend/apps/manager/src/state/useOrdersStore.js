// apps/manager/src/state/useOrdersStore.js
import { create } from "zustand";
import { getOrders } from "../lib/api";
import { connectRealtime } from "../lib/realtime";

export const useOrdersStore = create((set, get) => ({
  orders: [],
  loading: false,
  _reqId: 0,

  // üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
  refresh: async () => {
    const id = (get()._reqId || 0) + 1;
    set({ loading: true, _reqId: id });
    try {
      const data = await getOrders();
      if (get()._reqId === id) {
        set({ orders: Array.isArray(data) ? data : data?.items || [] });
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á:", err);
    } finally {
      if (get()._reqId === id) set({ loading: false });
    }
  },

  // üîî –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ SSE
  initRealtime: () => {
    connectRealtime((evt) => {
      // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á/–∑–∞–∫–∞–∑–æ–≤ ‚Äî –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
      if (evt?.type === "order_updated" || evt?.type === "task_updated") {
        get().refresh();
      }
    });
  },
}));

// –ê–≤—Ç–æ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ SSE –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
useOrdersStore.getState().initRealtime();
