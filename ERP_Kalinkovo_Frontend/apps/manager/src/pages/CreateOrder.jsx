// src/pages/CreateOrder.jsx
import React from 'react';
import { useForm } from 'react-hook-form';
import { useNavigate } from 'react-router-dom';
import ConfirmModal from '../components/ConfirmModal';
import { useToaster } from '../components/Toaster';
import { useOrdersStore } from '../state/useOrdersStore';
import { createOrder } from '../lib/api';

export default function CreateOrder() {
  const nav = useNavigate();
  const toast = useToaster();
  const refresh = useOrdersStore((s) => s.refresh);

  const { register, handleSubmit, formState: { errors, isSubmitting }, watch, reset, getValues, setValue } = useForm({
    defaultValues: {
      title: '',
      operation: 'inbound',
      apple_kind: 'unsorted',
      category: '',
      apple_type: '',
      qty_total: '',
      from_site: '',
      to_site: '',
      customer: '',
      when: ''
    }
  });

  const op = watch('operation');
  const kind = watch('apple_kind');
  const [confirmOpen, setConfirmOpen] = React.useState(false);

  // üß© –ü—Ä–æ—Å—Ç–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è (–±–µ–∑ zod)
  const validatePayload = (v) => {
    if (!v.title?.trim()) return '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏';
    if (!v.apple_type?.trim()) return '–£–∫–∞–∂–∏—Ç–µ —Å–æ—Ä—Ç —è–±–ª–æ–∫';
    if (!v.qty_total || isNaN(v.qty_total)) return '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—á–∏—Å–ª–æ–º)';
    if (v.operation === 'inbound' && !v.to_site?.trim()) return '–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è';
    if (v.operation === 'outbound' && !v.from_site?.trim()) return '–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è';
    return null;
  };

  const onConfirm = async () => {
    try {
      const v = getValues();
      const err = validatePayload(v);
      if (err) {
        toast.error(err);
        return;
      }

      const payload = {
        title: v.title,
        operation: v.operation,
        apple_kind: v.apple_kind,
        category: v.apple_kind === 'sorted' ? (v.category || null) : null,
        apple_type: v.apple_type,
        qty_total: Number(v.qty_total),
        from_site: v.operation === 'outbound' ? (v.from_site || null) : null,
        to_site: v.operation === 'inbound' ? (v.to_site || null) : null,
        customer: v.customer || null,
        when: v.when || null
      };

      await createOrder(payload);
      toast.success('–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –±—Ä–∏–≥–∞–¥–∏—Ä—É');
      setConfirmOpen(false);
      reset();
      await refresh();
      nav('/');
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏', e);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ.');
    }
  };

  const onSubmit = () => setConfirmOpen(true);

  return (
    <div className="bg-white border border-brand-100 rounded-xl2 p-6 shadow-sm">
      <h2 className="text-2xl font-semibold mb-4 text-brand-800">–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –±—Ä–∏–≥–∞–¥–∏—Ä—É</h2>
      <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
        <Field label="–ù–∞–∑–≤–∞–Ω–∏–µ" error={errors.title?.message}>
          <input className="inp" {...register('title')} placeholder="–ù–∞–ø—Ä.: –í–≤–æ–∑ –Ω–µ—Å–æ—Ä—Ç –ê–π–¥–∞—Ä–µ–¥ –≤ –•-8–∞" autoFocus />
        </Field>

        <Field label="–û–ø–µ—Ä–∞—Ü–∏—è">
          <div className="grid grid-cols-2 gap-2">
            <button type="button"
              className={`btn ${op === 'inbound' ? 'ring-2 ring-brand-500' : ''}`}
              onClick={() => setValue('operation', 'inbound')}>–í–≤–æ–∑</button>
            <button type="button"
              className={`btn ${op === 'outbound' ? 'ring-2 ring-brand-500' : ''}`}
              onClick={() => setValue('operation', 'outbound')}>–í—ã–≤–æ–∑</button>
          </div>
        </Field>

        <Field label="–í–∏–¥ —è–±–ª–æ–∫">
          <div className="grid grid-cols-2 gap-2">
            <button type="button"
              className={`btn ${kind === 'unsorted' ? 'ring-2 ring-brand-500' : ''}`}
              onClick={() => setValue('apple_kind', 'unsorted')}>–ù–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ</button>
            <button type="button"
              className={`btn ${kind === 'sorted' ? 'ring-2 ring-brand-500' : ''}`}
              onClick={() => setValue('apple_kind', 'sorted')}>–°–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ</button>
          </div>
        </Field>

        {kind === 'sorted' && (
          <Field label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è">
            <div className="flex gap-2">
              {['1', '2', '3'].map(c => (
                <button key={c} type="button" className="btn" onClick={() => setValue('category', c)}>{c}</button>
              ))}
              <input className="inp flex-1" {...register('category')} placeholder="1/2/3" />
            </div>
          </Field>
        )}

        <Field label="–°–æ—Ä—Ç —è–±–ª–æ–∫">
          <input className="inp" {...register('apple_type')} placeholder="–ê–π–¥–∞—Ä–µ–¥, –ì–ª–æ—Å—Ç–µ—Ä‚Ä¶" />
        </Field>

        <Field label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (—è—â–∏–∫–æ–≤)">
          <input className="inp" {...register('qty_total')} inputMode="numeric" />
        </Field>

        {op === 'outbound' && (
          <Field label="–û—Ç–∫—É–¥–∞ (—Å–∫–ª–∞–¥/—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫)">
            <input className="inp" {...register('from_site')} placeholder="–•-8–∞" />
          </Field>
        )}
        {op === 'inbound' && (
          <Field label="–ö—É–¥–∞ (—Å–∫–ª–∞–¥/—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫)">
            <input className="inp" {...register('to_site')} placeholder="–•-8–∞" />
          </Field>
        )}

        <Field label="–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)">
          <input className="inp" {...register('customer')} placeholder="–ö–ª–∏–µ–Ω—Ç, –∫–æ–Ω—Ç–∞–∫—Ç—ã‚Ä¶" />
        </Field>

        <Field label="–ö–æ–≥–¥–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)">
          <input className="inp" {...register('when')} placeholder="–°–µ–≥–æ–¥–Ω—è 16:00" />
        </Field>

        <div className="flex gap-3">
          <button className="px-4 py-2 rounded-xl2 bg-brand-600 text-white disabled:opacity-60" disabled={isSubmitting}>–°–æ–∑–¥–∞—Ç—å</button>
          <button type="button" className="px-4 py-2 rounded-xl2 border border-brand-200" onClick={() => reset()}>–°–±—Ä–æ—Å</button>
        </div>
      </form>

      <ConfirmModal
        open={confirmOpen}
        onCancel={() => setConfirmOpen(false)}
        onConfirm={onConfirm}
        title="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
        confirmText="–°–æ–∑–¥–∞—Ç—å"
      >
        –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ: –æ–ø–µ—Ä–∞—Ü–∏—è <b>{op === 'inbound' ? '–≤–≤–æ–∑' : '–≤—ã–≤–æ–∑'}</b>, —Å–æ—Ä—Ç <b>{watch('apple_type') || '‚Äî'}</b>, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ <b>{watch('qty_total') || '‚Äî'}</b>.
      </ConfirmModal>

      <style>{`.inp{width:100%;border:1px solid #e5efe7;border-radius:1rem;padding:12px 14px;font-size:16px;outline:none} .inp:focus{border-color:#55a962;box-shadow:0 0 0 3px #e6f4ea} .btn{border:1px solid #e5efe7;padding:10px 14px;border-radius:12px;background:#fff}`}</style>
    </div>
  );
}

function Field({ label, error, children }) {
  return (
    <label className="block">
      <div className="mb-1 text-brand-700 font-medium">{label}</div>
      {children}
      {error && <div className="text-rose-700 mt-1">{String(error)}</div>}
    </label>
  );
}
