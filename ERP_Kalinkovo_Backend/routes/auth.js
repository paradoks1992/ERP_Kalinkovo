// routes/auth.js
import { Router } from "express";
import {
  login,
  refreshToken,
  logout,
  monitorLogin, // üî• –¥–æ–±–∞–≤–ª–µ–Ω–æ
} from "../controllers/auth.controller.js";
import { verifyToken } from "../middleware/verifyToken.js";

const router = Router();

/**
 * –í—Ö–æ–¥: –≤—ã–¥–∞–µ—Ç –ø–∞—Ä—É —Ç–æ–∫–µ–Ω–æ–≤ + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * body: { login, password }
 */
router.post("/login", login);

/**
 * üîê –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –º–æ–Ω–∏—Ç–æ—Ä–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –±–µ–∑ –ø–∞—Ä–æ–ª—è
 * body: { code, secret } ‚Äî code = –∏–º—è —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "7A"), secret = MONITOR_SECRET
 */
router.post("/monitor-login", monitorLogin);

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ access-—Ç–æ–∫–µ–Ω–∞ –ø–æ refresh-—Ç–æ–∫–µ–Ω—É
 * body: { refresh_token } | { token } | { refreshToken }
 */
router.post("/refresh", refreshToken);

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–µ–∫—É—â–µ–≥–æ access-—Ç–æ–∫–µ–Ω–∞
 * header: Authorization: Bearer <accessToken>
 */
router.get("/check", verifyToken, (req, res) => {
  return res.json({
    ok: true,
    user: req.user ?? null,
  });
});

/**
 * –í—ã—Ö–æ–¥: –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º refresh –≤ –ë–î/–∫—ç—à–µ (–ø–æ–∫–∞ no-op)
 */
router.post("/logout", logout);

export default router;
