// scripts/createMonitorUser.js
import 'dotenv/config';
import bcrypt from 'bcryptjs';
import sql from 'mssql';

const dbConfig = {
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  server: process.env.DB_SERVER,
  port: parseInt(process.env.DB_PORT || '1433', 10),
  database: process.env.DB_NAME,
  options: {
    encrypt: false,
    trustServerCertificate: true,
  },
};

(async () => {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await sql.connect(dbConfig);

    const login = 'monitor';
    const plainPassword = 'monitor123';
    const role = 'monitor';

    console.log('üîí –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å...');
    const hashed = await bcrypt.hash(plainPassword, 10);

    const checkUser = await sql.query`
      SELECT * FROM Users WHERE login = ${login}
    `;

    if (checkUser.recordset.length > 0) {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ.');
    } else {
      console.log('üë§ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      await sql.query`
        INSERT INTO Users (login, password, role)
        VALUES (${login}, ${hashed}, ${role})
      `;
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "monitor" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.');
    }

    await sql.close();
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err.message);
  }
})();
